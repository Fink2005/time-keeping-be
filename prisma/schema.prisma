generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Language {
  id               String            @id @db.VarChar(10)
  name             String            @db.VarChar(500)
  userTranslations UserTranslation[]

  createdById Int?
  createdBy   User? @relation("LanguageCreatedBy", fields: [createdById], references: [id], onDelete: SetNull, onUpdate: NoAction)
  updatedById Int?
  updatedBy   User? @relation("LanguageUpdatedBy", fields: [updatedById], references: [id], onDelete: SetNull, onUpdate: NoAction)

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([deletedAt]) // index deltedAt vì query những record chưa xóa ( = null )
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String? @db.VarChar(500)
  phoneNumber String? @db.VarChar(50)
  avatar      String? @db.VarChar(1000) //scalar type
  //chỉ có scalar type thì mới là collumm của table, còn 

  // Này có thể dùng để thực hiện chức năng quên mật khẩu, đăng nhập 2 bước
  status        UserStatus     @default(INACTIVE)
  refreshTokens RefreshToken[]

  createdLanguages Language[] @relation("LanguageCreatedBy")
  updatedLanguages Language[] @relation("LanguageUpdatedBy")

  createdUserTranslations UserTranslation[] @relation("UserTranslationCreatedBy")
  updatedUserTranslations UserTranslation[] @relation("UserTranslationUpdatedBy")
  userTranslations        UserTranslation[] @relation("User")

  devices Device[] // Liên kết 1-n với Device

  // 1 user có thể tạo ra nhiều user khác
  // 1 user chỉ có thể được tạo ra bởi 1 user khác
  // Tự quan hệ 1-n
  createdById  Int?
  createdBy    User?  @relation("CreatorUsers", fields: [createdById], references: [id], onDelete: SetNull, onUpdate: NoAction)
  createdUsers User[] @relation("CreatorUsers")

  updatedById  Int?
  updatedBy    User?  @relation("UpdatorUsers", fields: [updatedById], references: [id], onDelete: SetNull, onUpdate: NoAction)
  updatedUsers User[] @relation("UpdatorUsers")

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([deletedAt])
}

model UserTranslation {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation("User", fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  languageId  String
  language    Language @relation(fields: [languageId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  address     String?  @db.VarChar(500)
  description String?

  createdById Int?
  createdBy   User? @relation("UserTranslationCreatedBy", fields: [createdById], references: [id], onDelete: SetNull, onUpdate: NoAction)
  updatedById Int?
  updatedBy   User? @relation("UserTranslationUpdatedBy", fields: [updatedById], references: [id], onDelete: SetNull, onUpdate: NoAction)

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([deletedAt])
}

model VerificationCode {
  id    Int                  @id @default(autoincrement())
  email String               @db.VarChar(500)
  code  String               @db.VarChar(50)
  type  VerificationCodeType

  expiresAt DateTime
  createdAt DateTime @default(now())

  @@unique([email, type])
  @@index([expiresAt])
}

model Device {
  id            Int            @id @default(autoincrement())
  userId        Int
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  userAgent     String
  ip            String
  lastActive    DateTime       @updatedAt // Thay updatedAt bằng lastActive cho ý nghĩa rõ hơn
  createdAt     DateTime       @default(now())
  isActive      Boolean        @default(true) // Trạng thái thiết bị (đang login hay đã logout)
  refreshTokens RefreshToken[] // Liên kết 1-n với RefreshToken
}

model RefreshToken {
  token    String @unique @db.VarChar(1000)
  userId   Int
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  deviceId Int // Foreign key tới Device
  device   Device @relation(fields: [deviceId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([expiresAt])
}

enum VerificationCodeType {
  REGISTER
  FORGOT_PASSWORD
  LOGIN
  DISABLE_2FA
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}
